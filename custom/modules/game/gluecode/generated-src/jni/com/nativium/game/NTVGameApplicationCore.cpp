// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "com/nativium/game/NTVGameApplicationCore.hpp"  // my header
#include "djinni/jni/Marshal.hpp"

namespace djinni_generated {

NTVGameApplicationCore::NTVGameApplicationCore() : ::djinni::JniInterface<::nativium::game::ApplicationCore, NTVGameApplicationCore>("com/nativium/game/ApplicationCore$CppProxy") {}

NTVGameApplicationCore::~NTVGameApplicationCore() = default;


CJNIEXPORT void JNICALL Java_com_nativium_game_ApplicationCore_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::nativium::game::ApplicationCore>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_nativium_game_ApplicationCore_shared(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::nativium::game::ApplicationCore::shared();
        return ::djinni::release(::djinni_generated::NTVGameApplicationCore::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_nativium_game_ApplicationCore_00024CppProxy_native_1getVersion(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::game::ApplicationCore>(nativeRef);
        auto r = ref->getVersion();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_nativium_game_ApplicationCore_00024CppProxy_native_1initialize(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jint j_width, jint j_height, jint j_mode)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::game::ApplicationCore>(nativeRef);
        ref->initialize(::djinni::I32::toCpp(jniEnv, j_width),
                        ::djinni::I32::toCpp(jniEnv, j_height),
                        ::djinni::I32::toCpp(jniEnv, j_mode));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
